@model IEnumerable<MVCAngular.Models.Anime>

@{
    ViewBag.Title = "Anime Central";
}

<h2>Index</h2>
<div class="container" ng-app="app">
    <div id="angularDiv" ng-controller="animeCtrl as ctrl">
        {{ctrl.name}}
        @*<ul>
            <li ng-repeat="a in ctrl.anime">{{a | json}}</li>
        </ul>*@
        <div>{{ctrl.anime[0].Name}}</div>
        <button class="btn btn-primary" ng-click="ctrl.onAddAnime()">Add Anime</button>

        <table class="table">
            <tr>
                <th ng-repeat="field in ctrl.fields">{{field}}</th>
                <th>Management</th>
            </tr>
            <tr ng-if="ctrl.canAddAnime">
                <td ng-repeat="field in ctrl.fields">
                    <input type="text" class="form-control" placeholder="{{field}}" ng-model="ctrl.newAnime[field]" />
                </td>
                <td>
                    <button spin="ctrl.state.isAdding"
                            class="btn btn-primary ladda-button"
                            ng-click="ctrl.onAdd()"
                            loading-button
                            data-style="expand-left">
                        <span class="ladda-label">Add</span>
                    </button>
                    <button class="btn btn-primary" ng-click="ctrl.onCancel()">Cancel</button>
                </td>
            </tr>
            @*<tr ng-if="ctrl.canAddAnime">
                <td>{{ctrl.newAnime | json}}</td>
            </tr>*@
            <tr ng-repeat="a in ctrl.anime">
                <td ng-repeat="field in ctrl.fields">{{a[field]}}</td>

                <td>
                    <a ng-href="@Url.Action("Edit", "Anime")?id={{a.Id}}"><span class="glyphicon glyphicon-pencil"></span> Edit | </a>
                    <a ng-href="@Url.Action("Details", "Anime")?id={{a.Id}}"><span class="glyphicon glyphicon-search"></span> Details | </a>
                    <a ng-href="@Url.Action("Delete", "Anime")?id={{a.Id}}"><span class="glyphicon glyphicon-trash"></span> Delete</a>
                    <!--    Please note that I used ng-href and ng-src since we are now using dynamic properties in the URL:
            Using Angular markup like {{hash}} in an href attribute will make the link go to the wrong URL if the user clicks it
            before Angular has a chance to replace the {{hash}} markup with its value. Until Angular replaces the markup the link will be
            broken and will most likely return a 404 error. The ngHref directive solves this problem.-->
                </td>
            </tr>
        </table>
        <div dragula='"bag-one"' dragula-model="ctrl.items" style="background-color:aquamarine">
            <div ng-repeat="item in ctrl.items">{{ item }}</div>
            Items
        </div>
        <div dragula='"bag-one"' dragula-model="ctrl.animals" style="background-color:aliceblue">
            <div ng-repeat="item in ctrl.animals">{{ item }}</div>
            Animals
        </div>

        @*<div class='wrapper'>
            <div class='container' dragula='"another-bag"' dragula-model='ctrl.items' style="background-color:aquamarine">
                <div ng-repeat='text in ctrl.items' ng-bind='text'></div>
                ITEM
            </div>
            <div class='container' dragula='"another-bag"' dragula-model='ctrl.animals' style="background-color:aliceblue">
                <div ng-repeat='text in ctrl.animals' ng-bind='text'></div>
                OTHER
            </div>
        </div>*@

      
        @*<ul dragula='"bag-two"' dragula-model="ctrl.items">
            <li ng-repeat="item in ctrl.items">{{item}}</li>
        </ul>*@
</div>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Release)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Studio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rating)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Release)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Studio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
</div>